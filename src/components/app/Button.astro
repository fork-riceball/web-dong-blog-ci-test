---
interface Props {
  href?: string;
  theme?: keyof typeof themeClassList;
  size?: keyof typeof sizeClassList;
}
// TODO: Add Polymorphic type

const { href, theme, size, ...rest } = Astro.props;
const Element = href ? 'a' : 'button';
const themeClassList = {
  solid: 'bg-secondary dark:bg-secondary-light text-primary-50 dark:text-primary-1000 border-transparent',
  outline: 'border-secondary dark:border-secondary-light text-primary-600 dark:text-secondary-light',
  secondary: 'bg-secondary dark:bg-secondary-light dark:text-primary-1000 text-primary-50',
  link: 'border-0 underline',
};
const sizeClassList = {
  md: 'px-4 py-2',
  lg: 'px-6 py-3',
  block: 'block w-full px-8 py-4',
};
const themeClass = theme ? themeClassList[theme] : themeClassList.solid;
const sizeClass = size ? sizeClassList[size] : sizeClassList.md;
const defaultButtonStyle =
  'rounded-full opacity-90 hover:opacity-100 transition-opacity border tracking-wider font-medium focus:outline-none focus:ring-4  focus:ring-secondary/60 dark:focus:ring-secondary-light/60 whitespace-nowrap disabled:opacity-40 disabled:cursor-not-allowed';
---

<Element href={href} class:list={[defaultButtonStyle, themeClass, sizeClass]} {...rest}>
  <slot />
</Element>
