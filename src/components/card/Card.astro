---
import type { HTMLAttributes } from 'astro/types';
import {hexToRgba} from '@/helper/hexToRgba'

export interface Props extends HTMLAttributes<'div'> {}
export interface Props {
  themeColor?: string;
  fillColor?: string;
}

const { themeColor, fillColor, ...attrs } = Astro.props;
const borderWidth = '1px';
const cardBorderColor = themeColor ? hexToRgba(themeColor, 0.3) : 'rgba(var(--secondary-color) / 0.3)';
const cardFillColor = fillColor || 'rgba(var(--secondary-color) / 0.03)';
const cardShadowColor = themeColor ? hexToRgba(themeColor, 0.05) : 'rgba(var(--secondary-color) / 0.05)';
const cardHoverFillColor = themeColor ? hexToRgba(themeColor, 0.6) : 'rgba(var(--secondary-color) / 0.2)';
---

<div {...attrs}>
  <div class="card transform active:-translate-y-1 relative rounded-lg p-6 filter backdrop-blur-xl transition-all hover:-translate-y-2">
    <slot />
    <div class="card__light"></div>
  </div>
</div>

<style define:vars={{ themeColor, borderWidth, cardHoverFillColor, cardBorderColor, cardFillColor, cardShadowColor }}>
  .card {
    background-color: var(--cardFillColor);
    border: var(--borderWidth) solid var(--cardBorderColor);
  }

  .card::after {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    height: 0.3rem;
    transform: translate(0, 100%);
    background-color: var(--cardFillColor);
    border: var(--borderWidth) solid var(--cardBorderColor);
    border-top: 0;
    border-radius: 0 0 10px 10px;
    opacity: 0.5;
    transition: 0.3s;
  }

  .card__light {
    position: absolute;
    top: 0;
    left: 0;
    overflow: hidden;
    width: 100%;
    height: 100%;
    z-index: -1;
  }
  .card__light::before {
    content: '';
    width: 100px;
    height: 100px;
    top: 0;
    left: 0;
    position: absolute;
    background-color: var(--themeColor);
    opacity: 0.1;
    filter: blur(30px);
  }

  .card:hover {
    background-color: var(--cardHoverFillColor);
    border-color: var(--cardBorderColor);
    box-shadow: 0 0 30px 10px var(--cardShadowColor);
  }

  .card:hover:after {
    height: 0.6rem;
    background: linear-gradient(0deg, transparent, var(--cardHoverFillColor));
    opacity: 0.45;
  }

  .card:active:after {
    height: 0.3rem;
    opacity: 1;
  }
</style>
