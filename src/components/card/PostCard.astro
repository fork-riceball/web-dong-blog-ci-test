---
import Card from '@/components/card/Card.astro';
import Category from '@/components/taxonomy/category.astro';
import Tags from '@/components/taxonomy/tags.astro';

export interface Props {
  post: {
    featureIcon?:
      | {
          width: number;
          height: number;
          alt: string;
          url: string;
        }
      | undefined;
    slug?: string;
    url?: string;
    titleTC: string;
    excerpt: string;
    publishDate?: Date;
    themeColor: string;
    tags?: string[];
    category?: string;
  };
}

const { featureIcon, titleTC, excerpt, publishDate, themeColor, tags, category, slug, url } = Astro.props.post;
---

<Card themeColor={themeColor}>
  <article class={`flex h-full flex-col justify-between gap-8  ${featureIcon ? 'pt-8' : ''}`}>
    {
      featureIcon && (
        <div
          style={`background-color: ${themeColor}`}
          class="absolute left-0 top-0 ml-4 -translate-y-1/2 transform-gpu overflow-hidden rounded-lg"
        >
          <img
            src={`${import.meta.env.BASE_URL}${featureIcon.url}`}
            width={featureIcon.width}
            height={featureIcon.height}
            alt={featureIcon.alt}
          />
        </div>
      )
    }
    <div>
      <h3 transition:name={`title-${slug}`} class="mb-4 text-lg font-medium">
        {
          url ? (
            <a href={url}>{titleTC}</a>
          ) : slug ? (
            <a href={`${import.meta.env.BASE_URL}post/${slug}`}>{titleTC}</a>
          ) : (
            titleTC
          )
        }
      </h3>
      <p class="max-w-prose">{excerpt}</p>
    </div>
    <div class="flex flex-wrap items-center justify-between">
      {
        publishDate && (
      <time class="text-sm opacity-60 transition-opacity hover:opacity-100">
            {publishDate
            .toLocaleDateString('zh-TW', { year: 'numeric', month: '2-digit', day: '2-digit' })
              .replace(/\//g, '-')}
          </time>
        )
        }

      <div class="flex flex-wrap">
        {category && <Category category={category} />}
        {tags && <Tags tags={tags} />}
      </div>
    </div>
  </article>
</Card>
