---
import { type BaseLayout } from '@/types.ts';
import '@/styles/global.css';
import { SEO } from 'astro-seo';
import globalConfig from '@/globalConfig';
import { hexToRgba } from '@/helper/hexToRgba';
import { ViewTransitions } from 'astro:transitions';
export interface Props extends BaseLayout {}

const { brand } = globalConfig;
const { title, description, themeColor, thumbnail } = Astro.props;
const seoTitle = `${title || brand.slogan} - ${brand.nameTC}`;
const seoDescription = description || brand.description;
const seoImage = {
  src: thumbnail?.src
    ? new URL(`/open-graph/src/content/post/${thumbnail.src}.png`, Astro.url)
    : new URL(brand.thumbnail.src, Astro.url),
  width: thumbnail?.width ?? brand.thumbnail.width,
  height: thumbnail?.height ?? brand.thumbnail.height,
  alt: thumbnail?.alt ?? brand.thumbnail.alt,
};
const bgGradientColor = themeColor ? hexToRgba(themeColor, 0.5) : '#dcbadc';
const bgGradientColorDark = themeColor ? hexToRgba(themeColor, 0.3) : '#1f2c94';
---

<!DOCTYPE html>
<html class="html" lang="zh-Hant-TW">
  <head>
    <SEO
      charset="UTF-8"
      title={seoTitle}
      description={seoDescription}
      openGraph={{
        basic: {
          title: `${seoTitle}`,
          type: 'website',
          image: `${seoImage.src}`,
        },
        image: {
          type: 'image/jpeg',
          alt: `${seoImage.alt}`,
          width: seoImage.width,
          height: seoImage.height,
        },
      }}
      twitter={{
        title: `${seoTitle}`,
        description: `${seoDescription}`,
        image: `${seoImage.src}`,
        imageAlt: `${seoImage.alt}`,
      }}
      extend={{
        link: [{ rel: 'icon', href: '/images/brand/logo.svg', type: 'image/svg+xml' }],
        meta: [
          {
            name: 'viewport',
            content: 'width=device-width, initial-scale=1',
          },
        ],
      }}
    />
    <ViewTransitions fallback="none" />

    <!-- Analytics -->
    <script
      type="text/partytown"
      src={`https://www.googletagmanager.com/gtag/js?id=${import.meta.env.PUBLIC_GOOGLEANALYTIC_ID}`}
    ></script>
    <script type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag('js', new Date());

      gtag('config', import.meta.env.PUBLIC_GOOGLEANALYTIC_ID);
    </script>
  </head>
  <body
    class="bg-primary-50 from-white bg-cover bg-center bg-no-repeat text-primary-800 selection:bg-secondary selection:text-primary-50 dark:bg-primary-1000 dark:from-primary-800 dark:to-primary-900 dark:text-primary-50"
  >
    <slot />
    <style define:vars={{ bgGradientColor, bgGradientColorDark }}>
      .html::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        z-index: -10;
        height: 100%;
        width: 100%;
        background-repeat: repeat;
        background-size: auto;
      }

      .html::after {
        background-image: linear-gradient(0deg, rgb(var(--primary-color-50)), transparent 15%),
          linear-gradient(
            220deg,
            rgb(var(--primary-color-300)) 5%,
            var(--bgGradientColor) 40%,
            rgb(var(--primary-color-50)) 90%
          );
      }

      .dark.html::after {
        background-image: linear-gradient(0deg, rgb(var(--primary-color-1000)) 1%, transparent 40%),
          linear-gradient(
            60deg,
            var(--bgGradientColorDark),
            rgb(var(--primary-color-700)) 30%,
            var(--bgGradientColorDark) 40%,
            rgb(var(--primary-color-1000)) 60%
          );
      }
    </style>
  </body>
</html>
