---
import Base from '@/layouts/Base.astro';
import { getCollection, CollectionEntry } from 'astro:content';
import Tags from '@/components/taxonomy/tags.astro';
import Category from '@/components/taxonomy/category.astro';
import Utteranc from '@/components/app/Utteranc.astro';

export interface Props {
  post: CollectionEntry<'post'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('post');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
const { post } = Astro.props;
const { featureImage, featureIcon, title, titleTC, publishDate, excerpt, themeColor, tags, category } = post.data;
const { slug } = post;
const { Content } = await post.render();
---

<Base title={titleTC} description={excerpt} themeColor={themeColor} thumbnail={{ src: `${slug}`, alt: `${titleTC}` }}>
  <main>
    <article class="mt-40 prose-lg">
      <header class="mb-16 not-prose md:mx-auto mx-8">
        <!-- Feature Image -->
        {
          featureImage ? (
            <img
              class="mx-auto mb-16"
              src={import.meta.env.URL_PREFIX + featureImage.url}
              width={featureImage.width}
              height={featureImage.height}
              alt={featureImage.alt}
            />
          ) : (
            ''
          )
        }
        <div class="relative mx-auto max-w-prose">
          <!-- Heading -->
          <div class="text-primary-900 dark:text-primary-50">
            <div class="mb-2">{title}</div>
            <h1 class="text-4xl mb-4 font-bold">{titleTC}</h1>
          </div>
          <div class="flex justify-between">
            <div class="flex md:block">
              <Category category={category} />
              <Tags tags={tags} />
            </div>
            <!-- Publish Date -->
            <time class="opacity-40 hover:opacity-100">
              {publishDate}
            </time>
          </div>

          {
            featureIcon ? (
              <div
                class="mx-auto absolute top-0 left-0 rounded-lg transform-gpu -translate-y-full -mt-8 overflow-hidden"
                style={`background-color: ${themeColor}`}
              >
                <img
                  src={`${import.meta.env.BASE_URL}${featureIcon.url}`}
                  width={featureIcon.width}
                  height={featureIcon.height}
                  alt={featureIcon.alt}
                />
              </div>
            ) : (
              ''
            )
          }
        </div>
      </header>
      <div class="wrapper mx-8 md:mx-auto prose md:prose-lg max-w-none dark:prose-invert dark:prose-dark">
        <Content />
        <Utteranc />
      </div>
    </article>
  </main>
</Base>

<style is:inline>
  .toc {
    padding: 1rem;
    position: relative;
    z-index: 1;
  }

  .toc::after {
    z-index: -1;
    position: absolute;
    content: '';
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 2px solid currentColor;
    background-image: linear-gradient(to right, currentColor, transparent);
    border-radius: 1rem;
    opacity: 0.05;
  }

  .toc::before {
    content: 'TOC';
    font-size: 4.5rem;
    position: absolute;
    writing-mode: vertical-lr;
    opacity: 0.05;
    top: 0;
    left: -2rem;
  }
  .toc .toc-item::marker {
    font-size: 0px;
  }

  .wrapper {
    display: grid;
    grid-template-columns:
      1fr
      min(65ch, 100%)
      1fr;
  }
  .wrapper > * {
    grid-column: 2;
  }
  /* .wrapper p:has(> img) { */

  .wrapper p:has(img) {
    margin: 0 auto;
    width: 100%;
    grid-column: 1 / -1;
  }

  .wrapper .imgFigure {
    width: 100%;
    grid-column: 1 / -1;
  }

  .wrapper > video {
    margin: 0 auto;

    grid-column: 1 / -1;
  }

  .wrapper > img {
    margin: 0 auto;
    grid-column: 1 / -1;
  }

  astro-island {
    display: inline-block;
  }

  .raw-html-embed {
    margin: 0 auto;
    width: 100%;
    grid-column: 1 / -1;
    text-align: center;
  }

  .raw-html-embed > video {
    margin: 0 auto;
  }

  iframe {
    max-width: 800px;
    margin: 0 auto;
  }

  table {
    width: auto;
  }

  .table {
    overflow: 'auto';
    display: block;

  }

  p img {
    margin: 0 auto;
  }

</style>
