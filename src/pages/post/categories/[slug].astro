---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Base from '@/layouts/Base.astro';
import PageBanner from '@/components/app/Hero.astro';
import CardGallery from '@/components/card/CardGallery.astro';
import PostCard from '@/components/card/PostCard.astro';

export interface Props {
  posts: CollectionEntry<'post'>;
  publishedPosts: CollectionEntry<'post'>[];
}

export async function getStaticPaths() {
  const publishedPosts = await getCollection('post', (data) => !data.data.isDraft);
  const categories = [...new Set(publishedPosts.map((post) => post.data.category).flat())];
  return categories.map((category) => [{ params: { slug: category }, props: { publishedPosts } }]);
}

const { slug } = Astro.params;
const { publishedPosts } = Astro.props;
const avaliableCurrentCategoryPosts = publishedPosts
.filter((post) => post.data.category.includes(slug as string))
.sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime())
---

<Base title={`搜尋文章分類：${slug}`} description={`搜尋文章分類`}>
  <PageBanner title={`搜尋文章分類：${slug}`} />
  <section class="px-4">
    <CardGallery>
      {
        avaliableCurrentCategoryPosts.map((post) => (
          <PostCard
            post={{
              slug: post.slug,
              featureIcon: post.data.featureIcon,
              titleTC: post.data.titleTC,
              excerpt: post.data.excerpt,
              publishDate: post.data.publishDate,
              themeColor: post.data.themeColor,
              tags: post.data.tags,
              category: post.data.category,
            }}
          />
        ))
      }
    </CardGallery>
  </section>
</Base>
