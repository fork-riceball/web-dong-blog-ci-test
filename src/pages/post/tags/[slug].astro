---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Base from '@/layouts/Base.astro';
import PageBanner from '@/components/banner/Page.astro';
import CardGallery from '@/components/card/CardGallery.astro';
import PostCard from '@/components/card/PostCard.astro';

export interface Props {
  posts: CollectionEntry<'post'>;
}

export async function getStaticPaths() {
  const posts = await getCollection('post');
  const tags = [...new Set(posts.map((post) => post.data.tags).flat())];
  return tags.map((tag) => [{ params: { slug: tag }, props: { posts } }]);
}
const { slug } = Astro.params;
const { posts } = Astro.props;

const targetTagPosts = posts.filter((post) => {
  if (post.data.isDraft === true) {
    return false;
  }
  return post.data.tags.includes(slug);
});
const title = `搜尋文章標籤：${Astro.params.slug}`;
const description = `搜尋文章標籤`;
---

<Base title={title} description={description}>
  <PageBanner title={title} />
  <section class="px-4">
    <CardGallery>
      {
        targetTagPosts.map((post) => (
          <PostCard
            post={{
              slug: post.slug,
              featureIcon: post.data.featureIcon,
              titleTC: post.data.titleTC,
              excerpt: post.data.excerpt,
              publishDate: post.data.publishDate,
              themeColor: post.data.themeColor,
              tags: post.data.tags,
              category: post.data.category,
            }}
          />
        ))
      }
    </CardGallery>
  </section>
</Base>
